{
  "name": "pixie_kafka_filtered",
  "description": null,
  "permissions": "PUBLIC_READ_WRITE",
  "pages": [
    {
      "name": "pixie_kafka",
      "description": null,
      "widgets": [
        {
          "title": "latency_distribution",
          "layout": {
            "column": 1,
            "row": 1,
            "width": 12,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT average(`kafka.latency`), max(`kafka.latency`), min(`kafka.latency`) FROM Metric \nwhere \n(`k8s.cluster.name` = {{k8s_cluster_name}} or {{k8s_cluster_name}}  = '_ALL_') AND \n(`k8s.namespace.name` = {{k8s_namespace_name}} or {{k8s_namespace_name}} = '_ALL_') AND\n(`k8s.pod.name` = {{k8s_pod_name}} or {{k8s_pod_name}} = '_ALL_') AND\n(`kafka.client_id` = {{kafka_client_id}} or {{kafka_client_id}} = '_ALL_') AND\n(`kafka.req_cmd` = {{kafka_req_cmd}} or {{kafka_req_cmd}} = '_ALL_') AND\n(`service.name` = {{service_name}} or {{service_name}} = '_ALL_') \nSINCE 30 MINUTES AGO TIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Amount of data (bytes)",
          "layout": {
            "column": 1,
            "row": 4,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT sum(`kafka.record_bytes_total`) FROM Metric \nwhere \n(`k8s.cluster.name` = {{k8s_cluster_name}} or {{k8s_cluster_name}}  = '_ALL_') AND \n(`k8s.namespace.name` = {{k8s_namespace_name}} or {{k8s_namespace_name}} = '_ALL_') AND\n(`k8s.pod.name` = {{k8s_pod_name}} or {{k8s_pod_name}} = '_ALL_') AND\n(`kafka.client_id` = {{kafka_client_id}} or {{kafka_client_id}} = '_ALL_') AND\n(`kafka.req_cmd` = {{kafka_req_cmd}} or {{kafka_req_cmd}} = '_ALL_') AND\n(`service.name` = {{service_name}} or {{service_name}} = '_ALL_') \nSINCE 30 MINUTES AGO TIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Throughput",
          "layout": {
            "column": 7,
            "row": 4,
            "width": 6,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.line"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "legend": {
              "enabled": true
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT count(`kafka.latency`) FROM Metric \nwhere \n(`k8s.cluster.name` = {{k8s_cluster_name}} or {{k8s_cluster_name}}  = '_ALL_') AND \n(`k8s.namespace.name` = {{k8s_namespace_name}} or {{k8s_namespace_name}} = '_ALL_') AND\n(`k8s.pod.name` = {{k8s_pod_name}} or {{k8s_pod_name}} = '_ALL_') AND\n(`kafka.client_id` = {{kafka_client_id}} or {{kafka_client_id}} = '_ALL_') AND\n(`kafka.req_cmd` = {{kafka_req_cmd}} or {{kafka_req_cmd}} = '_ALL_') AND\n(`service.name` = {{service_name}} or {{service_name}} = '_ALL_') \nSINCE 30 MINUTES AGO TIMESERIES"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            },
            "yAxisLeft": {
              "zero": true
            }
          }
        },
        {
          "title": "Table of latencies",
          "layout": {
            "column": 1,
            "row": 7,
            "width": 12,
            "height": 3
          },
          "linkedEntityGuids": null,
          "visualization": {
            "id": "viz.table"
          },
          "rawConfiguration": {
            "facet": {
              "showOtherSeries": false
            },
            "nrqlQueries": [
              {
                "accountId": 0,
                "query": "SELECT max(`kafka.latency`), min(`kafka.latency`), average(`kafka.latency`), count(`kafka.latency`) as num_requests FROM Metric \nFACET \n`k8s.cluster.name`, `k8s.namespace.name`, `k8s.pod.name`, `kafka.broker.pod`, `kafka.client_id`, `kafka.req_cmd`, `service.name`\nWHERE\n(`k8s.cluster.name` = {{k8s_cluster_name}} or {{k8s_cluster_name}}  = '_ALL_') AND \n(`k8s.namespace.name` = {{k8s_namespace_name}} or {{k8s_namespace_name}} = '_ALL_') AND\n(`k8s.pod.name` = {{k8s_pod_name}} or {{k8s_pod_name}} = '_ALL_') AND\n(`kafka.client_id` = {{kafka_client_id}} or {{kafka_client_id}} = '_ALL_') AND\n(`kafka.req_cmd` = {{kafka_req_cmd}} or {{kafka_req_cmd}} = '_ALL_') AND\n(`service.name` = {{service_name}} or {{service_name}} = '_ALL_') \n\nSINCE 30 MINUTES ago"
              }
            ],
            "platformOptions": {
              "ignoreTimeRange": false
            }
          }
        }
      ]
    }
  ],
  "variables": [
    {
      "name": "kafka_req_cmd",
      "items": null,
      "defaultValue": {
        "string": "_ALL_"
      },
      "nrqlQuery": {
        "accountIds": [
          0
        ],
        "query": "select kafka.req_cmd from (SELECT count(`kafka.latency`) FROM Metric FACET `kafka.req_cmd`) "
      },
      "title": "",
      "type": "NRQL"
    },
    {
      "name": "k8s_pod_name",
      "items": null,
      "defaultValue": {
        "string": "_ALL_"
      },
      "nrqlQuery": {
        "accountIds": [
          0
        ],
        "query": "select k8s.pod.name from (SELECT count(`kafka.latency`) FROM Metric FACET `k8s.pod.name`) "
      },
      "title": "",
      "type": "NRQL"
    },
    {
      "name": "kafka_client_id",
      "items": null,
      "defaultValue": {
        "string": "_ALL_"
      },
      "nrqlQuery": {
        "accountIds": [
          0
        ],
        "query": "select `kafka.client_id`  from (SELECT count(`kafka.latency`) FROM Metric FACET `kafka.client_id` )"
      },
      "title": "",
      "type": "NRQL"
    },
    {
      "name": "k8s_cluster_name",
      "items": null,
      "defaultValue": {
        "string": "_ALL_"
      },
      "nrqlQuery": {
        "accountIds": [
          0
        ],
        "query": "select `k8s.cluster.name`  from (SELECT count(`kafka.latency`) FROM Metric FACET `k8s.cluster.name` )"
      },
      "title": "",
      "type": "NRQL"
    },
    {
      "name": "k8s_namespace_name",
      "items": null,
      "defaultValue": {
        "string": "_ALL_"
      },
      "nrqlQuery": {
        "accountIds": [
          0
        ],
        "query": "select `k8s.namespace.name`  from (SELECT count(`kafka.latency`) FROM Metric FACET `k8s.namespace.name` )"
      },
      "title": "",
      "type": "NRQL"
    },
    {
      "name": "service_name",
      "items": null,
      "defaultValue": {
        "string": "_ALL_"
      },
      "nrqlQuery": {
        "accountIds": [
          0
        ],
        "query": "select `service.name`  from (SELECT count(`kafka.latency`) FROM Metric FACET `service.name` )"
      },
      "title": "",
      "type": "NRQL"
    }
  ]
}
